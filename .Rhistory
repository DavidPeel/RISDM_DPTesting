sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PO=NULL, PA=~1),
control=list( coord.names=c("x","y")))
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y")))
#the very vague everything
my.control <- list( prior.mean=0, int.sd=1000, other.sd=1000)
#(much) tighter prior for effects
my.control <- list( prior.mean=0, int.sd=1000, other.sd=0.1)
#the default
my.control <- list( prior.mean=0, int.sd=1000, other.sd=10)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PO=NULL, PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.noRand <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
addRandom=FALSE))
plot( fm, covarRaster=covars, nFigRow=2, ask=FALSE)
plot( fm.noRand, covarRaster=covars, nFigRow=2, ask=FALSE)
#This is a mock-up only.
#You should use a much(!) larger value of S.
#You will probably want to choose a larger value of n.threads too.
fm$preds <- predict( fm, covarRaster=covars, S=50,
intercept.terms="PA_Intercept")
plot( fm$preds$mean.field)
mtrace( predict.isdm)
#Predicting probability too
fm$preds.probs <- predict( fm, covarRaster=covars,
S=50, intercept.terms="PA_Intercept",
type="probability")
intercept.terms=NULL
plot( fm$preds.probs$mean.field)
mtrace.off()
#This is a mock-up only.
#You should use a much(!) larger value of S.
#You will probably want to choose a larger value of n.threads too.
fm$preds <- predict( fm, covarRaster=covars, S=50,
intercept.terms=NULL)
plot( fm$preds$mean.field)
#Predicting probability too
fm$preds.probs <- predict( fm, covarRaster=covars,
S=50, intercept.terms="PA_Intercept",
type="probability")
#Predicting probability too
fm$preds.probs <- predict( fm, covarRaster=covars,
S=50, intercept.terms="PA_Intercept",
type=NULL)
#Predicting probability too
fm$preds.probs <- predict( fm, covarRaster=covars,
S=50, intercept.terms=NULL,
type="probability")
plot( fm$preds.probs$mean.field)
plot( values( fm$preds$mean.field[[1]]), values( fm$preds.probs$mean.field[[1]]), pch='.', cex=1)
dev.off()
plot( values( fm$preds$mean.field[[1]]), values( fm$preds.probs$mean.field[[1]]), pch='.', cex=1)
#Predicting probability too
fm$preds.probs <- predict( fm, covarRaster=covars,
S=50, intercept.terms="PA_Intercept",
type="probability")
plot( fm$preds.probs$mean.field)
#PO data only
fm.PO <- isdm( observationList=list( POdat=gamba_PO),
covarBrick=covars,
mesh=my.mesh,
responseNames=NULL,
sampleAreaNames=NULL,
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=NULL,
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.PO$preds <- predict( fm.PO, covarRaster=covars, S=50,
intercept.terms="PO_Intercept")
plot( fm.PO$preds$mean.field)
#PA data only
fm.PA <- isdm( observationList=list( PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PA="PA"),
sampleAreaNames=c( PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.PA$preds <- predict( fm.PA, covarRaster=covars, S=50,
intercept.terms="PA_Intercept")
plot( fm.PA$preds$mean.field)
#You may wish to tidy your workspace.
rm( covars, fm, fm.noRand, gamba_PA, gamba_PO, my.mesh, filenames,
my.biasForm, my.form, my.control, my.mesh, my.mesh.bad)
#You may wish to tidy your workspace.
rm( covars, fm, fm.noRand, fm.PA, fm.PO, gamba_PA, gamba_PO, my.mesh, filenames,
my.biasForm, my.form, my.control, my.mesh, my.mesh.bad)
args( predict.isdm)
library( RISDM)
args( predict.isdm)
?predict.isdm
?isdm
mtrace( isdm)
filenames <- paste0( system.file("extdata", package="RISDM"),
c("/GambaExample_sqrtACC_23Mar28.tif",
"/GambaExample_sqrtDEM_23Mar28.tif",
"/GambaExample_SMRZ_23Mar28.tif"))
covars <- stack( filenames)
names( covars) <- c("ACC","DEM","SMRZ")
print( colnames( coordinates( covars)))  #to see how things are labelled.
plot( covars)
gamba_PO <- readRDS( system.file("extdata", "Gamba_PO_23Mar28.RDS",
package="RISDM"))
gamba_PA <- readRDS( system.file("extdata", "Gamba_PA_23Mar28.RDS",
package="RISDM"))
str( gamba_PO)
str( gamba_PA)
my.mesh <- makeMesh( covars$DEM, max.n=c(1000, 350), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh, my.mesh$hull, ras=covars$DEM)
my.mesh.bad <- makeMesh( covars$DEM, max.n=c(250, 30), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh.bad, my.mesh$hull, ras=covars$DEM)
#linear in SMRZ only
my.form <- ~0+SMRZ
#interacting between SMRZ and DEM
my.form <- ~0+SMRZ*DEM
#a B-spline regression basis with low degrees of freedom
my.form <- ~0+splines::bs(SMRZ, df=3)
#a(n orthogonal) polynomial in SMRZ and DEM
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)
#adding accessibility too (as per paper).
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)+acc
#intercept only == no heterogeneity in search effort
my.biasForm <- 1
#regression spline in acc
my.biasForm <- ~1+splines::bs( acc, df=3)
#linear in acc
my.biasForm <- ~1+acc
#observer differences as a sampling artefact
list( PA=~1+observer)
#intercept only == no sampling artefact
#               == no heterogeneity within each data type
list( PA=~1)
qqq()
?attr
?residuals.glm
rm( list=ls())
q()
rm( list=ls())
Q90
q()
q()
library( RISDM)
sessionInfo()
?residuals.isdm
?plot.isdm
filenames <- paste0( system.file("extdata", package="RISDM"),
c("/GambaExample_sqrtACC_23Mar28.tif",
"/GambaExample_sqrtDEM_23Mar28.tif",
"/GambaExample_SMRZ_23Mar28.tif"))
covars <- stack( filenames)
names( covars) <- c("ACC","DEM","SMRZ")
print( colnames( coordinates( covars)))  #to see how things are labelled.
plot( covars)
library( raster)
covars <- stack( filenames)
names( covars) <- c("ACC","DEM","SMRZ")
print( colnames( coordinates( covars)))  #to see how things are labelled.
plot( covars)
gamba_PO <- readRDS( system.file("extdata", "Gamba_PO_23Mar28.RDS",
package="RISDM"))
gamba_PA <- readRDS( system.file("extdata", "Gamba_PA_23Mar28.RDS",
package="RISDM"))
str( gamba_PO)
str( gamba_PA)
my.mesh <- makeMesh( covars$DEM, max.n=c(1000, 350), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh, my.mesh$hull, ras=covars$DEM)
my.mesh.bad <- makeMesh( covars$DEM, max.n=c(250, 30), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh.bad, my.mesh$hull, ras=covars$DEM)
#linear in SMRZ only
my.form <- ~0+SMRZ
#interacting between SMRZ and DEM
my.form <- ~0+SMRZ*DEM
#a B-spline regression basis with low degrees of freedom
my.form <- ~0+splines::bs(SMRZ, df=3)
#a(n orthogonal) polynomial in SMRZ and DEM
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)
#adding accessibility too (as per paper).
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)+acc
#intercept only == no heterogeneity in search effort
my.biasForm <- 1
#regression spline in acc
my.biasForm <- ~1+splines::bs( acc, df=3)
#linear in acc
my.biasForm <- ~1+acc
#observer differences as a sampling artefact
list( PA=~1+observer)
#intercept only == no sampling artefact
#               == no heterogeneity within each data type
list( PA=~1)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y")))
#the very vague everything
my.control <- list( prior.mean=0, int.sd=1000, other.sd=1000)
#(much) tighter prior for effects
my.control <- list( prior.mean=0, int.sd=1000, other.sd=0.1)
#the default
my.control <- list( prior.mean=0, int.sd=1000, other.sd=10)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
summary( fm)
plot( fm, covarRaster=covars, nFigRow=2, ask=FALSE)
plot( fm, covarRaster=covars, nFigRow=2, ask=FALSE)
dev.off()
plot( fm, covarRaster=covars, nFigRow=2, ask=FALSE)
ressy <- residuals( fm, covarRaster=covars)
names( ressy)
ressy$DC
ressy$AA
ressy$PA
ressy$PO
dev.off()
?devtools::build_vignettes
rm( list=ls())
q()
library( devtools)
?devtools::build_vignettes
build_vignettes()
clean_vignettes()
build_vignettes()
build_vignettes()
clean_vignettes()
build_vignettes()
q()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build(vignettes = FALSE)
devtools::check()
library( RISDM)
library( raster)
filenames <- paste0( system.file("extdata", package="RISDM"),
c("/GambaExample_sqrtACC_23Mar28.tif",
"/GambaExample_sqrtDEM_23Mar28.tif",
"/GambaExample_SMRZ_23Mar28.tif"))
covars <- stack( filenames)
names( covars) <- c("ACC","DEM","SMRZ")
print( colnames( coordinates( covars)))  #to see how things are labelled.
plot( covars)
gamba_PO <- readRDS( system.file("extdata", "Gamba_PO_23Mar28.RDS",
package="RISDM"))
gamba_PA <- readRDS( system.file("extdata", "Gamba_PA_23Mar28.RDS",
package="RISDM"))
str( gamba_PO)
str( gamba_PA)
my.mesh <- makeMesh( covars$DEM, max.n=c(1000, 350), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh, my.mesh$hull, ras=covars$DEM)
my.mesh.bad <- makeMesh( covars$DEM, max.n=c(250, 30), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh.bad, my.mesh$hull, ras=covars$DEM)
#linear in SMRZ only
my.form <- ~0+SMRZ
#interacting between SMRZ and DEM
my.form <- ~0+SMRZ*DEM
#a B-spline regression basis with low degrees of freedom
my.form <- ~0+splines::bs(SMRZ, df=3)
#a(n orthogonal) polynomial in SMRZ and DEM
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)
#adding accessibility too (as per paper).
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)+acc
#intercept only == no heterogeneity in search effort
my.biasForm <- 1
#regression spline in acc
my.biasForm <- ~1+splines::bs( acc, df=3)
#linear in acc
my.biasForm <- ~1+acc
#observer differences as a sampling artefact
list( PA=~1+observer)
#intercept only == no sampling artefact
#               == no heterogeneity within each data type
list( PA=~1)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y")))
#the very vague everything
my.control <- list( prior.mean=0, int.sd=1000, other.sd=1000)
#(much) tighter prior for effects
my.control <- list( prior.mean=0, int.sd=1000, other.sd=0.1)
#the default
my.control <- list( prior.mean=0, int.sd=1000, other.sd=10)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.noRand <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
addRandom=FALSE))
summary( fm)
plot( fm, covarRaster=covars, nFigRow=2, ask=FALSE)
plot( fm.noRand, covarRaster=covars, nFigRow=2, ask=FALSE)
#This is a mock-up only.
#You should use a much(!) larger value of S.
#You will probably want to choose a larger value of n.threads too.
fm$preds <- predict( fm, covarRaster=covars, S=50,
intercept.terms="PA_Intercept")
plot( fm$preds$mean.field)
#Predicting probability too
fm$preds.probs <- predict( fm, covarRaster=covars,
S=50, intercept.terms="PA_Intercept",
type="probability")
plot( fm$preds.probs$mean.field)
#PO data only
fm.PO <- isdm( observationList=list( POdat=gamba_PO),
covarBrick=covars,
mesh=my.mesh,
responseNames=NULL,
sampleAreaNames=NULL,
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=NULL,
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.PO$preds <- predict( fm.PO, covarRaster=covars, S=50,
intercept.terms="PO_Intercept")
plot( fm.PO$preds$mean.field)
#PA data only
fm.PA <- isdm( observationList=list( PAdat=gamba_PA),
covarBrick=covars,
mesh=my.mesh,
responseNames=c( PA="PA"),
sampleAreaNames=c( PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.PA$preds <- predict( fm.PA, covarRaster=covars, S=50,
intercept.terms="PA_Intercept")
plot( fm.PA$preds$mean.field)
#You may wish to tidy your workspace.
rm( covars, fm, fm.noRand, fm.PA, fm.PO, gamba_PA, gamba_PO, my.mesh, filenames,
my.biasForm, my.form, my.control, my.mesh, my.mesh.bad)
devtools::build_vignettes()
devtools::build( vignettes = FALSE)
library(RISDM)
devtools::build_vignettes()
devtools::build( vignettes = FALSE)
library(RISDM)
library(RISDM)
library(RISDM)
library( RISDM)
library( raster)
filenames <- paste0( system.file("extdata", package="RISDM"),
c("/GambaExample_sqrtACC_23Mar28.tif",
"/GambaExample_sqrtDEM_23Mar28.tif",
"/GambaExample_SMRZ_23Mar28.tif"))
covars <- stack( filenames)
names( covars) <- c("ACC","DEM","SMRZ")
print( colnames( coordinates( covars)))  #to see how things are labelled.
plot( covars)
gamba_PO <- readRDS( system.file("extdata", "Gamba_PO_23Mar28.RDS",
package="RISDM"))
gamba_PA <- readRDS( system.file("extdata", "Gamba_PA_23Mar28.RDS",
package="RISDM"))
str( gamba_PO)
str( gamba_PA)
my.mesh <- makeMesh( covars$DEM, max.n=c(1000, 350), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh, my.mesh$hull, ras=covars$DEM)
my.mesh.bad <- makeMesh( covars$DEM, max.n=c(250, 30), dep.range=3, doPlot=FALSE)
checkMesh( my.mesh.bad, my.mesh$hull, ras=covars$DEM)
#linear in SMRZ only
my.form <- ~0+SMRZ
#interacting between SMRZ and DEM
my.form <- ~0+SMRZ*DEM
#a B-spline regression basis with low degrees of freedom
my.form <- ~0+splines::bs(SMRZ, df=3)
#a(n orthogonal) polynomial in SMRZ and DEM
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)
#adding accessibility too (as per paper).
my.form <- ~0+poly(SMRZ,2)+poly(DEM,2)+acc
#intercept only == no heterogeneity in search effort
my.biasForm <- 1
#regression spline in acc
my.biasForm <- ~1+splines::bs( acc, df=3)
#linear in acc
my.biasForm <- ~1+acc
#observer differences as a sampling artefact
list( PA=~1+observer)
#intercept only == no sampling artefact
#               == no heterogeneity within each data type
list( PA=~1)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covars=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y")))
#the very vague everything
my.control <- list( prior.mean=0, int.sd=1000, other.sd=1000)
#(much) tighter prior for effects
my.control <- list( prior.mean=0, int.sd=1000, other.sd=0.1)
#the default
my.control <- list( prior.mean=0, int.sd=1000, other.sd=10)
fm <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covars=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
prior.range=c(1,0.1), prior.space.sigma=c( 5,0.1)))
fm.noRand <- isdm( observationList=list( POdat=gamba_PO,
PAdat=gamba_PA),
covars=covars,
mesh=my.mesh,
responseNames=c( PO=NULL, PA="PA"),
sampleAreaNames=c( PO=NULL, PA="Area"),
distributionFormula=~0+poly( DEM, 2) + poly( SMRZ,2) + ACC,
biasFormula=~1+ACC,
artefactFormulas=list( PA=~1),
control=list( coord.names=c("x","y"),
int.sd=1000, other.sd=10, prior.mean=0,
addRandom=FALSE))
summary( fm)
rm( list=ls())
q()
